on:
  push:
    branches:
      - main

jobs:
  build-macos:
      strategy:
        matrix:
          arch: [x86_64, aarch64]
      
      name: ${{ matrix.arch }}
      runs-on: macos-12
      steps:
        - uses: actions/checkout@v3
        - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y
        - name: Add architecture ${{ matrix.arch }}
          run: rustup target add ${{ matrix.arch }}-apple-darwin
        - name: Build application
          shell: bash
          run: |
           cd client-gui
           cargo build --release --target=${{ matrix.arch }}-apple-darwin
        - name: Upload artifact
          uses: actions/upload-artifact@v4
          with:
            name: ${{ matrix.arch }}-apple-darwin
            path: target/${{ matrix.arch }}-apple-darwin/release/client-gui


  universal-binary:
    name: Universal binary
    needs: [build-macos]
    runs-on: macos-12
    steps:
      - name: Download x86_64
        uses: actions/download-artifact@v4
        with:
          name: x86_64-apple-darwin
          path: x86_64
      - name: Download arm64
        uses: actions/download-artifact@v4
        with:
          name: aarch64-apple-darwin
          path: aarch64
      - name: Combine app bundles
        shell: bash
        run: |
          unzip x86_64.zip -d x86_64
          unzip aarch64.zip -d aarch64
          lipo {x86_64,aarch64}/client-gui -create -output client-gui
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: client-gui
          path: universal-apple-darwin
     
